package bmp_react;


	// Generated by Selenium IDE
	import org.junit.Test;
	import org.junit.Before;
	import org.junit.After;
	import static org.junit.Assert.*;
	import static org.hamcrest.CoreMatchers.is;
	import static org.hamcrest.core.IsNot.not;
	import org.openqa.selenium.By;
	import org.openqa.selenium.WebDriver;
	import org.openqa.selenium.firefox.FirefoxDriver;
	import org.openqa.selenium.chrome.ChromeDriver;
	import org.openqa.selenium.remote.RemoteWebDriver;
	import org.openqa.selenium.remote.DesiredCapabilities;
	import org.openqa.selenium.Dimension;
	import org.openqa.selenium.WebElement;
	import org.openqa.selenium.interactions.Actions;
	import org.openqa.selenium.support.ui.ExpectedConditions;
	import org.openqa.selenium.support.ui.WebDriverWait;
	import org.openqa.selenium.JavascriptExecutor;
	import org.openqa.selenium.Alert;
	import org.openqa.selenium.Keys;
	import java.util.*;
	import java.net.MalformedURLException;
	import java.net.URL;
	public class aksayrocks {
	  private WebDriver driver;
	  private Map<String, Object> vars;
	  JavascriptExecutor js;
	  @Before
	  public void setUp() {
		  driver = new FirefoxDriver(); //
	  }
	  @After
	  public void tearDown() {
	    driver.quit();
	  }
	  @Test
	  public void testtracker() throws InterruptedException {
	    // Test name: test_tracker
	    // Step # | name | target | value | comment
	    // 1 | open | https://10.0.6.137:8443/bmp |  | 
	    driver.get("https://10.0.6.137:8443/bmp");
	    // 2 | setWindowSize | 1280x672 |  | 
	    Thread.sleep(3000);
	
	    driver.findElement(By.id("tsslogin-form_username")).click();
	    // 6 | type | id=tsslogin-form_username | admin | 
	    Thread.sleep(2000);
	    driver.findElement(By.id("tsslogin-form_username")).sendKeys("admin");
	    Thread.sleep(2000);
	    // 7 | click | id=tsslogin-form_password |  | 
	    driver.findElement(By.id("tsslogin-form_password")).click();
	    Thread.sleep(2000);
	    // 8 | type | id=tsslogin-form_password | Admin123 | 
	    driver.findElement(By.id("tsslogin-form_password")).sendKeys("Admin123");
	    // 9 | click | css=.ant-btn |  | 
	    Thread.sleep(2000);
	    driver.findElement(By.cssSelector(".ant-btn")).click();
	    // 10 | click | linkText=Tracker |  | 
	    Thread.sleep(2000);
	    driver.findElement(By.linkText("Tracker")).click();
	    // 11 | click | id=TSSGUI_InputTextFieldStyle |  | 
	    Thread.sleep(2000);
	    driver.findElement(By.id("TSSGUI_InputTextFieldStyle")).click();
	    // 12 | type | id=TSSGUI_InputTextFieldStyle | 666666666666 | 
	    Thread.sleep(2000);
	    driver.findElement(By.id("TSSGUI_InputTextFieldStyle")).sendKeys("666666666666");
	    // 13 | click | css=.form-group:nth-child(4) #TSSGUI_DateFieldSetStyle .fa |  | 
	    driver.findElement(By.cssSelector(".card-body")).click();
	    Thread.sleep(3000);
	    driver.findElement(By.cssSelector(".formHover > #TSSGUI_DateFieldSetStyle .tss-datePicker-input")).click();
	    Thread.sleep(2000);
	    driver.findElement(By.cssSelector("tr:nth-child(2) > td:nth-child(2) > span")).click();
	    driver.findElement(By.cssSelector(".card-body")).click();
	    Thread.sleep(2000);
	    driver.findElement(By.cssSelector(".formHover > #TSSGUI_DateFieldSetStyle .tss-datePicker-input")).click();
	    Thread.sleep(2000);
	    driver.findElement(By.cssSelector("tr:nth-child(2) > td:nth-child(3) > span")).click();
	    Thread.sleep(2000);
	    driver.findElement(By.cssSelector(".card-body > .row:nth-child(1)")).click();
	    Thread.sleep(2000);
	    driver.findElement(By.cssSelector(".tss-primary-onhover-btn")).click();

	    // 20 | click | css=.swal2-confirm |  | 
	    Thread.sleep(3000);
	    driver.findElement(By.cssSelector(".swal2-confirm")).click();
	    // 21 | click | css=.swal2-confirm |  | 
	    Thread.sleep(3000);
	    driver.findElement(By.cssSelector(".swal2-confirm")).click();
	  }
	}


