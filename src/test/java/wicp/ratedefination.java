package wicp;

// Generated by Selenium IDE
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.WorkbookFactory;
import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import org.testng.annotations.AfterClass;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

public class ratedefination {
	private WebDriver driver;

	private String filePath = "C:/Users/akshay.ps/Downloads/data.xlsx"; // Path to Excel file

	@BeforeClass
	public void setUp() throws InterruptedException {
		driver = new FirefoxDriver();
		driver.get("https://10.0.6.253:8443/wicp/welcome/jsp/login.jsp");
		driver.manage().window().maximize();
		driver.findElement(By.id("username")).sendKeys("praveena");
		Thread.sleep(2000);
		driver.findElement(By.name("password")).sendKeys("T4y4n4");
		driver.findElement(By.id("subBtn")).click();
		Thread.sleep(2000);

	}

	@AfterClass
	public void tearDown() {
		// driver.quit();
	}

	@Test(dataProvider = "serviceData")
	public void ratedefination(String serviceName, String definame, String Actionname) throws InterruptedException {

		// driver.manage().window().setSize(new Dimension(1296, 688));

		driver.findElement(By
				.xpath("/html/body/div[2]/div[3]/div[2]/div/section[2]/div[2]/div/div/div[5]/div/div[2]/ul/li[3]/a/b"))
				.click();
		Thread.sleep(1000);
		driver.findElement(By.xpath("//*[@id=\"rateDefBtnId\"]")).click();
		Thread.sleep(1000);

		{
			WebElement element = driver.findElement(By.cssSelector(".tss-add"));
			Actions builder = new Actions(driver);
			builder.moveToElement(element).perform();
		}
		driver.findElement(By.cssSelector(".tss-add")).click();
		{
			WebElement element = driver.findElement(By.tagName("body"));
			Actions builder = new Actions(driver);
			builder.moveToElement(element, 0, 0).perform();
		}
		Thread.sleep(1000);
		driver.findElement(By.id("rdName")).sendKeys(definame);
		Thread.sleep(1000);
		driver.findElement(By.id("ctServiceSB")).click();
		{
			WebElement dropdown = driver.findElement(By.id("ctServiceSB"));
			dropdown.findElement(By.xpath("//option[contains(text(), '" + serviceName + "')]")).click();
		}
		driver.findElement(By.id("descTA")).click();
		driver.findElement(By.id("descTA")).sendKeys("sample");
		driver.findElement(By.id("standardChk")).click();

		driver.findElement(By.xpath(
				"/html/body/div[2]/div[3]/div[2]/div/section[2]/div[3]/div/form/div/div[1]/div[2]/div[2]/div[2]/div[2]/div[2]/span/span[1]/span/span[2]"))
				.click();
		Thread.sleep(1000);
		driver.findElement(By.xpath("/html/body/span/span/span[1]/input")).sendKeys(Actionname);

	
		{
			WebElement element = driver.findElement(By.id("submit"));
			Actions builder = new Actions(driver);
			builder.moveToElement(element).perform();
		}
		driver.findElement(By.id("submit")).click();
		Thread.sleep(1000);
		{
			WebElement element = driver.findElement(By.tagName("body"));
			Actions builder = new Actions(driver);
			builder.moveToElement(element, 0, 0).perform();
		}
		driver.findElement(By.cssSelector(".confirm")).click();
		
		
	}

	@DataProvider(name = "serviceData")
	public Object[][] getServiceData() throws IOException {
		File file = new File(filePath);
		FileInputStream fileInputStream = new FileInputStream(file);
		Workbook workbook = WorkbookFactory.create(fileInputStream);
		Sheet sheet = workbook.getSheet("ratedefination");

		int rowCount = sheet.getPhysicalNumberOfRows();
		Object[][] data = new Object[rowCount - 1][3]; // Corrected size for 3 columns

		for (int i = 1; i < rowCount; i++) { // Start from row index 1 (skip headers)
			Row row = sheet.getRow(i);
			if (row == null)
				continue; // Skip null rows

			data[i - 1][0] = getCellValue(row, 0); // Sabb Name
			data[i - 1][1] = getCellValue(row, 1); // defination name
			data[i - 1][2] = getCellValue(row, 2); // Action name
		}

		workbook.close();
		fileInputStream.close();
		return data;
	}

	// Helper method to handle null cells
	private String getCellValue(Row row, int cellIndex) {
		if (row.getCell(cellIndex) == null) {
			return ""; // Return empty string if cell is null
		}
		return row.getCell(cellIndex).getStringCellValue();
	}

}
